module DFHack-Plugin-PR-Get-Sources
{
    # DFHack
    {
        if $IsVariableDefined(DFHackPR)
        {
            call dfhack-raft::DFHack-PR-Git
            (
                RepoID: dfhack,
                Repository: https://github.com/DFHack/dfhack.git,
                Directory: $WorkingDirectory/src,
                BaseBranch: develop,
                PullRequest: $DFHackPR,
                RequestedCommitHash: $GetVariableValue(DFHackCommit)
            );
        }
        else
        {
            call dfhack-raft::DFHack-Git
            (
                RepoID: dfhack,
                Repository: https://github.com/DFHack/dfhack.git,
                Directory: $WorkingDirectory/src,
                Branch: $Coalesce($GetVariableValue(DFHackBranch), develop),
                Tag: $GetVariableValue(DFHackTag),
                RequestedCommitHash: $GetVariableValue(DFHackCommit),
                CommitHash => $ResolvedDFHackCommit,
                ResolvedTag => $ResolvedDFHackTag
            );
        }
    }

    # Structures
    if $IsVariableDefined(StructuresPR)
    {
        InedoCore::Exec
        (
            FileName: $DefaultGitExePath,
            Arguments: fetch https://github.com/DFHack/df-structures.git refs/pull/$StructuresPR/merge,
            WorkingDirectory: $WorkingDirectory/src/library/xml,
            ErrorOutputLogLevel: Information
        );

        InedoCore::Exec
        (
            FileName: $DefaultGitExePath,
            Arguments: -c advice.detachedHead=false checkout -q FETCH_HEAD,
            WorkingDirectory: $WorkingDirectory/src/library/xml,
            ErrorOutputLogLevel: Warning
        );
    }

    # Plugin
    {
        call dfhack-raft::DFHack-PR-Git
        (
            RepoID: $PluginOwner-$PluginRepo,
            Repository: https://github.com/$PluginOwner/$PluginRepo.git,
            Directory: $WorkingDirectory/src/plugins/$PluginRepo,
            BaseBranch: master,
            PullRequest: $ReleaseNumber,
            RequestedCommitHash: $PluginCommit
        );
    }
}
