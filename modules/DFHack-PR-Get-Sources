module DFHack-PR-Get-Sources
{
    if $IsVariableDefined(OverrideStructuresCommit)
    {
        # DFHack
        if $IsVariableDefined(DFHackPR)
        {
            call DFHack-PR-Git
            (
                RepoID: dfhack,
                Repository: https://github.com/DFHack/dfhack.git,
                Directory: $WorkingDirectory/src,
                BaseBranch: develop,
                PullRequest: $DFHackPR,
                RequestedCommitHash: $GetVariableValue(DFHackCommit)
            );
        }
        else
        {
            call DFHack-Git
            (
                RepoID: dfhack,
                Repository: https://github.com/DFHack/dfhack.git,
                Directory: $WorkingDirectory/src,
                Branch: $Coalesce($GetVariableValue(DFHackBranch), develop),
                Tag: $GetVariableValue(DFHackTag),
                RequestedCommitHash: $GetVariableValue(DFHackCommit),
                CommitHash => $Dummy1,
                ResolvedTag => $Dummy2
            );
        }

        # Structures
        {
            InedoCore::Exec
            (
                FileName: $DefaultGitExePath,
                Arguments: fetch https://github.com/DFHack/df-structures.git refs/pull/$ReleaseNumber/merge,
                WorkingDirectory: $WorkingDirectory/src/library/xml,
                ErrorOutputLogLevel: Information
            );

            InedoCore::Exec
            (
                FileName: $DefaultGitExePath,
                Arguments: -c advice.detachedHead=false checkout -q $OverrideStructuresCommit,
                WorkingDirectory: $WorkingDirectory/src/library/xml,
                ErrorOutputLogLevel: Warning
            );
        }
    }
    else
    {
        # DFHack
        {
            call DFHack-PR-Git
            (
                RepoID: dfhack,
                Repository: https://github.com/DFHack/dfhack.git,
                Directory: $WorkingDirectory/src,
                BaseBranch: develop,
                PullRequest: $ReleaseNumber,
                RequestedCommitHash: $DFHackCommit
            );
        }

        # Structures
        if $IsVariableDefined(StructuresPR)
        {
            InedoCore::Exec
            (
                FileName: $DefaultGitExePath,
                Arguments: fetch https://github.com/DFHack/df-structures.git refs/pull/$StructuresPR/merge,
                WorkingDirectory: $WorkingDirectory/src/library/xml,
                ErrorOutputLogLevel: Information
            );

            InedoCore::Exec
            (
                FileName: $DefaultGitExePath,
                Arguments: -c advice.detachedHead=false checkout -q FETCH_HEAD,
                WorkingDirectory: $WorkingDirectory/src/library/xml,
                ErrorOutputLogLevel: Warning
            );
        }
    }
}
